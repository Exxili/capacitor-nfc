{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst NFCPlug = registerPlugin('NFC', {\n    web: () => import('./web').then((m) => new m.NFCWeb()),\n});\nexport * from './definitions';\nexport const NFC = {\n    isSupported: NFCPlug.isSupported.bind(NFCPlug),\n    startScan: NFCPlug.startScan.bind(NFCPlug),\n    cancelWriteAndroid: NFCPlug.cancelWriteAndroid.bind(NFCPlug),\n    onRead: (func) => NFC.wrapperListeners.push(func),\n    onWrite: (func) => NFCPlug.addListener(`nfcWriteSuccess`, func),\n    onError: (errorFn) => {\n        NFCPlug.addListener(`nfcError`, errorFn);\n    },\n    removeAllListeners: (eventName) => {\n        NFC.wrapperListeners = [];\n        return NFCPlug.removeAllListeners(eventName);\n    },\n    wrapperListeners: [],\n    async writeNDEF(options) {\n        var _a;\n        const ndefMessage = {\n            records: (_a = options === null || options === void 0 ? void 0 : options.records.map((record) => {\n                const payload = typeof record.payload === 'string'\n                    ? Array.from(new TextEncoder().encode(record.payload))\n                    : Array.isArray(record.payload)\n                        ? record.payload\n                        : record.payload instanceof Uint8Array\n                            ? Array.from(record.payload)\n                            : null;\n                if (!payload)\n                    throw 'Unsupported payload type';\n                return {\n                    type: record.type,\n                    payload,\n                };\n            })) !== null && _a !== void 0 ? _a : [],\n        };\n        await NFCPlug.writeNDEF(ndefMessage);\n    },\n};\n// Decode a base64 string into a Uint8Array (browser-safe). Existing code used atob already.\nconst decodeBase64ToBytes = (base64Payload) => {\n    const bin = atob(base64Payload);\n    const out = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; i++)\n        out[i] = bin.charCodeAt(i);\n    return out;\n};\n// Parse NFC Forum \"Text\" (Well Known 'T') records according to spec.\nconst decodeTextRecord = (bytes) => {\n    if (bytes.length === 0)\n        return '';\n    const status = bytes[0];\n    const isUTF16 = (status & 0x80) !== 0; // Bit 7 indicates encoding\n    const langLength = status & 0x3f; // Bits 0-5 language code length\n    const fallbackDecodeWhole = () => {\n        try {\n            return new TextDecoder('utf-8').decode(bytes);\n        }\n        catch (_a) {\n            return Array.from(bytes).map(b => String.fromCharCode(b)).join('');\n        }\n    };\n    if (1 + langLength > bytes.length) {\n        // Not spec-compliant; treat entire payload as plain UTF-8 text\n        return fallbackDecodeWhole();\n    }\n    const langBytes = bytes.slice(1, 1 + langLength);\n    // Validate language code is ASCII letters / hyphen; otherwise fallback\n    const langValid = Array.from(langBytes).every(b => (b >= 65 && b <= 90) || (b >= 97 && b <= 122) || b === 45);\n    if (!langValid)\n        return fallbackDecodeWhole();\n    const textBytes = bytes.slice(1 + langLength);\n    try {\n        const decoder = new TextDecoder(isUTF16 ? 'utf-16' : 'utf-8');\n        return decoder.decode(textBytes);\n    }\n    catch (_a) {\n        return fallbackDecodeWhole();\n    }\n};\n// Basic URI prefix table for Well Known 'U' records (optional convenience)\nconst URI_PREFIX = [\n    '',\n    'http://www.',\n    'https://www.',\n    'http://',\n    'https://',\n    'tel:',\n    'mailto:',\n    'ftp://anonymous:anonymous@',\n    'ftp://ftp.',\n    'ftps://',\n    'sftp://',\n    'smb://',\n    'nfs://',\n    'ftp://',\n    'dav://',\n    'news:',\n    'telnet://',\n    'imap:',\n    'rtsp://',\n    'urn:',\n    'pop:',\n    'sip:',\n    'sips:',\n    'tftp:',\n    'btspp://',\n    'btl2cap://',\n    'btgoep://',\n    'tcpobex://',\n    'irdaobex://',\n    'file://',\n    'urn:epc:id:',\n    'urn:epc:tag:',\n    'urn:epc:pat:',\n    'urn:epc:raw:',\n    'urn:epc:',\n    'urn:nfc:',\n];\nconst decodeUriRecord = (bytes) => {\n    if (bytes.length === 0)\n        return '';\n    const prefixIndex = bytes[0];\n    const prefix = URI_PREFIX[prefixIndex] || '';\n    const remainder = bytes.slice(1);\n    try {\n        return prefix + new TextDecoder('utf-8').decode(remainder);\n    }\n    catch (_a) {\n        return (prefix +\n            Array.from(remainder)\n                .map((b) => String.fromCharCode(b))\n                .join(''));\n    }\n};\nconst toStringPayload = (recordType, bytes) => {\n    // Well Known Text\n    if (recordType === 'T')\n        return decodeTextRecord(bytes);\n    // Well Known URI\n    if (recordType === 'U')\n        return decodeUriRecord(bytes);\n    // Default: attempt UTF-8 decode\n    try {\n        return new TextDecoder('utf-8').decode(bytes);\n    }\n    catch (_a) {\n        return Array.from(bytes)\n            .map((c) => String.fromCharCode(c))\n            .join('');\n    }\n};\nconst coercePayloadToBytes = (p) => {\n    if (p instanceof Uint8Array)\n        return p;\n    if (Array.isArray(p) && p.every((n) => typeof n === 'number'))\n        return new Uint8Array(p);\n    if (typeof p === 'string') {\n        // Heuristic: if it's valid base64 decode it; if not, treat as UTF-8 string content\n        try {\n            if (/^[A-Za-z0-9+/=]+$/.test(p) && p.length % 4 === 0) {\n                return decodeBase64ToBytes(p);\n            }\n        }\n        catch ( /* fall through */_a) { /* fall through */ }\n        // treat as plain string => encode\n        return new TextEncoder().encode(p);\n    }\n    return new Uint8Array();\n};\nconst mapPayloadTo = (type, data) => {\n    return {\n        messages: data.messages.map((message) => ({\n            records: message.records.map((record) => {\n                const raw = record.payload; // base64 string originally, but be defensive\n                const bytes = coercePayloadToBytes(raw);\n                let payload;\n                switch (type) {\n                    case 'b64': {\n                        // If original was already base64, keep it; else convert bytes to base64\n                        if (typeof raw === 'string' && /^[A-Za-z0-9+/=]+$/.test(raw)) {\n                            payload = raw;\n                        }\n                        else {\n                            let bin = '';\n                            for (let i = 0; i < bytes.length; i++)\n                                bin += String.fromCharCode(bytes[i]);\n                            payload = btoa(bin);\n                        }\n                        break;\n                    }\n                    case 'uint8Array':\n                        payload = bytes;\n                        break;\n                    case 'numberArray':\n                        payload = Array.from(bytes);\n                        break;\n                    case 'string':\n                        payload = toStringPayload(record.type, bytes);\n                        break;\n                    default:\n                        payload = raw;\n                }\n                return { type: record.type, payload };\n            }),\n        })),\n    };\n};\nNFCPlug.addListener(`nfcTag`, (data) => {\n    const wrappedData = {\n        base64() {\n            return mapPayloadTo('b64', data);\n        },\n        string() {\n            return mapPayloadTo('string', data);\n        },\n        uint8Array() {\n            return mapPayloadTo('uint8Array', data);\n        },\n        numberArray() {\n            return mapPayloadTo('numberArray', data);\n        },\n    };\n    for (const listener of NFC.wrapperListeners) {\n        listener(wrappedData);\n    }\n});\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nexport class NFCWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.wrapperListeners = [];\n    }\n    isSupported() {\n        return Promise.resolve({ supported: false });\n    }\n    startScan() {\n        return Promise.reject(new Error('NFC is not supported on web'));\n    }\n    cancelWriteAndroid() {\n        return Promise.reject(new Error('NFC is not supported on web'));\n    }\n    writeNDEF() {\n        return Promise.reject(new Error('NFC is not supported on web'));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onRead(_func) {\n        return Promise.reject(new Error('NFC is not supported on web'));\n    }\n    onWrite() {\n        return Promise.reject(new Error('NFC is not supported on web'));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onError(_errorFn) {\n        return Promise.reject(new Error('NFC is not supported on web'));\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":"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"}